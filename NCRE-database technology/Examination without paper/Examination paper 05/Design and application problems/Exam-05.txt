/*
 * @Author: HuangYuhui 
 * @Date: 2019-02-07 09:46:06 
 * @Last Modified by: HuangYuhui
 * @Last Modified time: 2019-02-07 11:26:12
 */

设计与应用题
1-现有论文和作者两个实体,论文实体的属性包括题目,期刊名称,年份,期刊号.作者实体的属性包括姓名,单位,地址;
一篇论文可以有多个作者,且每一个作者写过多篇论文,在每一篇论文中有作者的书顺序号.请完成以下操作 : 
(1)-画出ER图
(2)-将ER图转换为关系模式,并指出每个关系模式的主键(加下划线/'')和外键(加波浪线/‘’).

    ------ 解题思路 ------
    (1)-在设计ER图时,首先应根据需求分析,确认实体,属性和联系这三种ER图的基本要素,需要强调的三条设计原则如下 : 
        (1)相对原则
        (2)一致原则
        (3)简单原则
        ER图的组成元素是 : 实体,属性和联系.
    
    (2)-略
    
    ------ 参考答案 ------
    (1)-详情见 : question-05.png

    (2)-论文('题目',期刊名称,年份,'期刊号')
        作者('姓名',单位,地址)
        发表('姓名','题目',顺序号)



/*
 * @Author: HuangYuhui 
 * @Date: 2019-02-07 09:05:07 
 * @Last Modified by: HuangYuhui
 * @Last Modified time: 2019-02-07 09:45:51
 */

 2-设有图书管理数据库,包含三张表 : 
 图书明细表(图书编号,图书类别,图书名称,作者,出版社,出版日期,定价);
 读者表(借书证号,姓名,类别,办证日期);
 借出信息表(借出编号,借书证号,图书编号,借书日期);

 完成操作 : 定义一个多语句表值函数,用于查询学生借书情况,只需要提供参数 : 借书证号.
 就可以通过调用函数返回此学生的借书情况,若有借书籍,则返回所借书籍的编号,书籍名称,定价
 和借书日期.若没有在借书籍,则返回记录为空.设函数名为 : f_BorrowBook(@jszh char(20))
    ------ 解题思路 ------
    CREATE FUNCTION [schema_name.] function_name
    (
        [
            {@parameter_name[AS][type_schema_name.]parameter_data_type[ = default]}
            [,...n]
        ]s
    )
    RETURNS @return_variable TABLE <table_type_definition>
    [AS]
        BEGIN
            function_body
        END
    [;]
    <table_type_definition>::=
    (
        {<column_definition><column_constraint>|<computed_column_definition>}
        [table_constraint]
        [,...n]
    )

    采用三表联合查询,通过传入的借书证号查出借出信息表中的图书编号,然后查出图书明细表的信息.
    
    ------ 参考答案 ------
    CREATE FUNCTION BorrowBook(@jszh char(20))
    RETURNS @jsqkb TABLE
    (
        书籍编号 char(20),
        书籍名称 char(50),
        定价 float,
        借书日期 datetime
    )
    AS
        BEGIN
            INSERT @jsqkb
                SELECT 图书明细表.图书编号,图书名称,定价,借出信息表.借出日期 FROM 借出信息表,图书明细表
                WHERE 借出信息表.图书编号 = 图书明细表.图书编号 AND 借出信息表.借书证号 = @jszh
            RETURN          /* ? */
        END    



/*
 * @Author: HuangYuhui 
 * @Date: 2019-02-07 10:34:57 
 * @Last Modified by:   HuangYuhui 
 * @Last Modified time: 2019-02-07 10:34:57 
 */

3-某采购中心采购了一套商品批发查询管理系统,此系统采用SQL Server 2008数据库管理系统,该系统需要经常处
理百万级以上的数据查询,同时该系统提供了第三方人员开发的SQL接口,第三方人员可以根据自己的需要开发自己的
应用程序接口来访问数据库中的相关数据.
(1)-系统在使用过程中,业务人人员反应系统操作速度很慢.经过工程师检查测试后,数据库系统本身及网络传输过程
    中存在着一些问题,请给出针对数据库系统本身及网络传输过程中可能的一些调优方案.
(2)-工程师在完成数据库系统本身和网络问题的优化后,发现第三方开发人员的SQL查询语句存在很多没有优化对的问
    题,请根据第三方开发人员角度给出一些优化方案.

    ------ 解题思路 ------
    从数据库本身和网络传输的角度出发,数据库性能底下的因素一般有 : 
    1-I/O吞吐量小,形成了瓶颈效应;
    2-没有创建计算列导致查询不优化;
    3-SQL Server 数据库内存不足;
    4-网络速度慢;
    5-查询出的数据量过大(可以采用多次查询不优化或其他的方法降低数据量)
    6-锁/死锁(这也是查询慢的常见问题,是程序设计的缺陷)

    ------ 参考答案 ------
    (1)-
        1-优化锁结构.
        2-纵向,横向分割表,减少表的尺寸.
        3-把数据,日志,索引放到不同的I/O设备上,增加读取速度,数据量(尺寸)越大,提高I/O越重要.
        4-升级硬件,扩大服务器的内存.Windows 2000和SQL Server 2000能支持4->8G的内存.配置
          虚拟内存,虚拟内存大小应基于计算机上并发运行的服务进行配置.增加服务器CPU个数.
        5-重建索引 : DBCC REINDEX,DBCC INDEXDEFRAG.
          收缩数据和日志 : DBCC SHRINK-DB,DBCC SHRINKFILE.
          设置自动收缩日志,对于大的数据库不要设置数据库自动增长.它会降低服务器的性能.

    (2)-
        1-对查询进行优化,尽量避免全表扫描,首先应考虑在WHERE及ORDER BY涉及的列上建立'索引'.
        2-应尽量避免在WHERE子句中使用'!=/<>'操作符,否则引擎将放弃使用索引进行全表扫描.
        3-任何地方都不要使用'SELECT * FROM'进行全表扫描,用具体的字段列代替'*',不要返回冗余字段.
        4-避免频繁创建和删除'临时表',以减少系统表资源的消耗.
        5-尽量避免使用'游标',因为游标的效率较差,如果游标操作的数据超过1万行,那么就应考虑改写.
        6-尽量避免'大事务'操作,提高系统并发能力.
    

 