/*
 * @Author: HuangYuhui 
 * @Date: 2019-02-12 12:43:21 
 * @Last Modified by: HuangYuhui
 * @Last Modified time: 2019-02-13 16:54:35
 */

设计与应用题

1-T1(a1,a2,a3,a5),T2(a3,a4),T3(a5,a6),T4(a3,a5,a7),其中带有下划线的属性标识为所在关系模式的主码,
  T1中的a3是参照T2的外码,T1中的a5是参照T3的外码,T4中的a3是参照T2的外码,T4中的a5是参照T3的外码.

问 : 请将上述'关系模式'用适当的'ER图'表示出来,并用下划线标出作为:实体主码的属性.

    ------ 解题思路 ------
    ER图向关系模式转换涉及两个方面 : 

    1-实体的转换 :
        在从ER图转换为关系模式时,一个实体就转换成一个关系模式,实体的属性就是关系模式的属性,实体间的键就是关系的主键.    
    2-实体间联系的转换 :
        实体间联系的转换 : 实体间存在三种联系,既 1:1 , 1:m , m:n 联系.

    ER图转换为关系模式规则 : 略. 

    ------ 参考答案 ------  
    详情见 : question-0801.png






2-设在SQL Server 2008 某数据库中有商品表和销售表,两个表的定义如下 :
CREATE TABLE 商品表
(
    商品号 CHAR(10) PRIMARY KEY,
    商品名 VARCHAR(40),
    类别 VARCHAR(20),
    进货单价 INT
);
CREATE TABLE 销售表
(
    商品号 CHAR(10) REFERENCES 商品表(商品号),
    销售时间 DATETIME,
    销售数量 INT,
    销售单价 INT,
    PRIMARY KEY(商品号,销售时间)
);

问: 现要创建一个存储过程: 查询指定类别的每种商品当年销售总金额(销售总金额 = 销售单价*销售数量);
CREATE PROC p_TotalProfit @lb VARCHAR(20)
AS
    SELECT 商品名,(SELECT ___ FROM 销售表 t1 WHERE ___ AND ___ = year(Getdate())) AS 销售总金额 
        FROM 商品表 t2 WHERE ___

    ------ 解题思路 ------
    题目中: (SELECT 销售单价*SUM(销售数量) FROM 销售表 t1 WHERE t1.商品号 = t2.商品号 AND t1.销售时间 = year(Getdate()))
    是个嵌套,别名叫: 销售总金额.
    ......

    ------ 参考答案 ------
    CREATE PROC p_TotalProfit @lb VARCHAR(20)  
    AS
    SELECT 商品名,(SELECT 销售单价*SUM(销售数量) FROM 销售表 t1 WHERE t1.商品号 = t2.商品号 AND t1.销售时间 = year(Getdate())) AS 销售总金额 
        FROM 商品表 t2 WHERE t2.类别 = @lb      /* t2.类别=@lb : 按给定的类别查询 */





3-设某超市经营管理系统使用SQL Server 2008 数据库管理系统,此数据库服务器有两颗CPU,16G内存,2TB磁盘.上线运行一年后,用户在生成
  每天每人销售人员以及每个收营台的总销售额报表时速度缓慢.经技术人员分析,发现速度缓慢的原因为销售单据表和销售单据明细表数据量合
  计达到了60个GB,已知这两个表结构如下 : 

  销售单据表(销售单据编号,销售时间,销售人员编号,收银台编号)
  销售单据明细表(销售单据编号,商品编号,单价,数量)

问 : 在进行此报表计算时数据库服务器CPU消耗非常高.为了优化此操作,某工程师建议在销售单据表中增加“付款总金额”属性,取值由触发器自动计算.
请从:'磁盘空间使用','销售操作时对数据库服务器的影响','数据一致性','总销售额计算速度影响' 方面分析此方案优劣.请判断此方案是否可行,并
从:'时空代价'和'优化效果'方面分析原因.

    ------ 解题思路 ------
    规范化 :
        在数据库设计阶段,主要强调的是高效利用存储空间,减少数据的冗余,减少数据的不一致性,这个过程也就是:规范化的过
        程,但是在数据库运行阶段要考虑到高效率的进行数据处理.
        完全规范化的数据库会产生很多表,对于一个频繁使用的查询,如果它要求操作多个相关的数据,则每次为生成需要的查询
        结果而连接的多个表中关连时,数据库管理系统就会消耗更多的计算资源,因为连接操作非常耗时.
    反规范化 :
        而反规范化是将规范化的关系转化为非规范化的关系的过程.目的是提高查询的效率.常见的方法有 : 
        (1)-增加派生冗余列.
        (2)-增加冗余列.
        (3)-重新组表
        (4)-分割表
        (5)-新增汇总表.


    ------ 参考答案 ------
    此方案不可行,该方案不可行的原因有如下两点.
    (1)-触发器可以通过数据库中的相关表进行层叠更改,这比直接把代码写在前台的做法更安全合理,保证了数据的一致性,
        但同时增加了磁盘的空间的消耗,在超市经营中要批量操作,多次触发的情况下,触发器的效率低,因为它相当于每次
        都执行一段SQL语句,使CPU的消耗更高,而且从时空代价角度来说并不能达到优化的效果.
    (2)-在数据单据表中增加"付款总金额"属性并不是最优的解决方案,应该在数据单据明细表中增加"付款总金额"属性,这
        样才能提高查询效率.